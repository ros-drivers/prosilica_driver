#! /usr/bin/env python

PACKAGE='prosilica_camera'

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

mode_enum = gen.enum( [ gen.const("StreamingMode", str_t, "streaming", "Run at maximum frame rate"),
                        gen.const("PolledMode",    str_t, "polled",    "Capture frame in response to service call"),
                        gen.const("FixedRateMode", str_t, "fixedrate", "Fixed Rate mode"),
                        gen.const("External1Mode", str_t, "syncin1",   "External trigger on SyncIn1 line"),
                        gen.const("External2Mode", str_t, "syncin2",   "External trigger on SyncIn2 line") ],
                      "Enum to set the trigger mode")

#       Name                    Type      Reconfiguration level             Description         Default   Min   Max
gen.add("trigger_mode",         str_t,    SensorLevels.RECONFIGURE_STOP,    "Camera trigger mode", "streaming", edit_method = mode_enum)
gen.add("auto_exposure",        bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Sets the camera exposure duration to automatic. Causes the `~exposure` setting to be ignored.", True)
gen.add("exposure",             double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera exposure time in seconds.", 0.025, 0.000025, 60.0)
gen.add("auto_gain",            bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Sets the analog gain to automatic. Causes the `~gain` setting to be ignored.", True)
gen.add("gain",                 int_t,    SensorLevels.RECONFIGURE_RUNNING, "The gain level in dB.", 0, 0, 24)
gen.add("auto_whitebalance",    bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Whether whitebalance will continuously adjust to the current scene. Causes the `~whitebalance_red` and `~whitebalance_blue` settings to be ignored.", True)
gen.add("whitebalance_red",     int_t,    SensorLevels.RECONFIGURE_RUNNING, "Red gain as a percentage of the camera default setting.", 100, 80, 300)
gen.add("whitebalance_blue",    int_t,    SensorLevels.RECONFIGURE_RUNNING, "Blue gain as a percentage of the camera default setting.", 100, 80, 300)
gen.add("binning_x",            int_t,    SensorLevels.RECONFIGURE_RUNNING, "Number of pixels to bin together horizontally.", 1, 1, 8)
gen.add("binning_y",            int_t,    SensorLevels.RECONFIGURE_RUNNING, "Number of pixels to bin together vertically.", 1, 1, 14)
gen.add("x_offset",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "X offset of the region of interest.", 0, 0, 2447)
gen.add("y_offset",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "Y offset of the region of interest.", 0, 0, 2049)
gen.add("width",                int_t,    SensorLevels.RECONFIGURE_RUNNING, "Width of the region of interest (0 for automatic).", 0, 0, 2448)
gen.add("height",               int_t,    SensorLevels.RECONFIGURE_RUNNING, "Height of the region of interest (0 for automatic).", 0, 0, 2050)
gen.add("frame_id",             str_t,    SensorLevels.RECONFIGURE_RUNNING, "The optical camera TF frame set in message headers.", "")
gen.add("trig_timestamp_topic", str_t,    SensorLevels.RECONFIGURE_STOP,    "Sets the topic from which an externally trigged camera receives its trigger timestamps.", "")
gen.add("trig_rate",            double_t, SensorLevels.RECONFIGURE_RUNNING, "Sets the expected triggering rate in externally triggered mode.", 15, 1, 100)
gen.add("auto_adjust_stream_bytes_per_second", bool_t, SensorLevels.RECONFIGURE_RUNNING, "Whether the node should automatically adjust the data rate. Causes `~stream_bytes_per_second` to be ignored.", True)
gen.add("stream_bytes_per_second", int_t, SensorLevels.RECONFIGURE_RUNNING, "Limits the data rate of the camera.", 45000000, 1, 115000000)
gen.add("exposure_auto_max",    double_t, SensorLevels.RECONFIGURE_RUNNING, "The max exposure time in auto exposure mode, in seconds.", 0.5, 0.000025, 60.0)
gen.add("exposure_auto_target", int_t,    SensorLevels.RECONFIGURE_RUNNING, "The auto exposure target mean value as a percentage, from 0=black to 100=white.", 50, 0, 100)
gen.add("gain_auto_max",        int_t,    SensorLevels.RECONFIGURE_RUNNING, "The max gain level in auto gain mode, in dB.", 24, 0, 24)
gen.add("gain_auto_target",     int_t,    SensorLevels.RECONFIGURE_RUNNING, "The auto gain target mean value as a percentage, from 0=black to 100=white.", 50, 0, 100)
gen.add("pixel_format",         str_t,    SensorLevels.RECONFIGURE_RUNNING, "The pixel format - default is Bayer8. Currently, the only other supported format is 24-bit rgb: use 'Rgb24'", "Bayer8")

exit(gen.generate(PACKAGE, "prosilica_driver", "ProsilicaCamera"))
